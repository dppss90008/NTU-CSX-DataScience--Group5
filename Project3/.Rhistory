}
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i, after=1)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i, after=1)
}
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i, after=1)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i)
}
x <- c(0)
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i)
}
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
append(x,i)
}
x <- c(1,2,3)
append(x,2)
x
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x <- c(0)
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
data<- data[x]
data<- data[x]
data <- posts$posts$data
data<- data[[x]]
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
data<- data[[x]]
data<- data[[1:2]]
View(posts)
data <- posts$posts$data
data<- data[[1:2]]
View(posts)
data <- posts$posts$data
View(data)
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
data[[1:2]]
x
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
}
}
x
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
}
}
x
View(data)
data <- posts$posts$data
data[[x]]
new <- list()
data[[1]]
mode(data[[1]])
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
new <- list()
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]]$comments)
}
}
View(new)
new <- list()
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]]$comments)
}
}
View(new)
new <- list()
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
data <- posts$posts$data
x
for(i in x){
data <- data[[-x]]
}
library(e1071)
library(magrittr)
library(caret)
train <- read.csv("titanicTrain.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- train[c(1:1000),]
all <- rbind(train, test)
#survived
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family
all$family <- all$parch + all$sibsp + 1
#boat
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
#children
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
#SVM
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
setwd("E:/GitHub/NTU-CSX-DataScience--Group5/Project3")
library(e1071)
library(magrittr)
library(caret)
train <- read.csv("titanicTrain.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- train[c(1:1000),]
all <- rbind(train, test)
#survived
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family
all$family <- all$parch + all$sibsp + 1
#boat
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
#children
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
#SVM
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
train <- read.csv("titanicTrain.csv")
View(train)
setwd("E:/GitHub/NTU-CSX-DataScience--Group5/Project3")
library(magrittr)
library(ggplot2)
train <- read.csv("titanicTrain.csv")
train <- train[c(1:1000),]
# Train data 銝??A
str(train)
sapply(train, function(x) {sum(is.na(x))})
# Pclass
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'pClass') +
theme(legend.position="none") + theme_grey() +
geom_label(stat='count', aes(label=..count..))
# Sex
ggplot(train[!is.na(train$survived),], aes(x = sex, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'Train data') +
geom_label(stat='count', aes(label=..count..))
## embarked ##
train$embarked <- train$embarked %>% as.factor
summary(train$embarked[train$survived==0])
summary(train$embarked[train$survived==1])
embark <- cbind(summary(train$embarked[train$survived==0]),summary(train$embarked[train$survived==1]))
embark <- embark[-1,] %>% t
rownames(embark) <- c("0","1")
barplot(embark,col=c("gray","black"),main="embarked variable",beside=TRUE,ylab="counts")
legend("topright", inset=.02,title="Survive",
c("0","1"), fill=c("gray","black"), horiz=TRUE, cex=0.8)
family <- train$parch + train$sibsp + 1
train <- cbind(train,family)
ps0 <- train$family[train$survived==0] %>% as.factor %>% summary
ps1 <- train$family[train$survived==1] %>% as.factor %>% summary %>% c(.,0)
family <- rbind(ps0,ps1)
rm(ps0)
rm(ps1)
barplot(family,col=c("gray","black"),main="family",beside=TRUE,ylab="counts",xlab="Number of people")
legend("topright", inset=.02,title="Survive",
c("0","1"), fill=c("gray","black"), horiz=TRUE, cex=0.8)
#load data
train <- read.csv("titanicTrain.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- train[c(1:1000),]
#bind the data
all <- rbind(train, test)
#as factor
all$sex <- as.factor(all$sex)
all$survived <- as.factor(all$survived)
#first we rename all boats with number 1 to 28
#tranfer original boat numbers to 1:27, 28 refer to NA
all$boat[all$boat == "5 7"] <- "17"
all$boat[all$boat == "5 9"] <- "18"
all$boat[all$boat == "8 10"] <- "19"
all$boat[all$boat == "13 15"] <- "20"
all$boat[all$boat == "13 15 B"] <- "21"
all$boat[all$boat == "15 16"] <- "22"
all$boat[all$boat == "A"] <- "23"
all$boat[all$boat == "B"] <- "24"
all$boat[all$boat == "D"] <- "26"
all$boat[all$boat == "C D"] <- "27"
all$boat[is.na(all$boat)] <- "28"
#escape = 1 refer to the refugee who successfully took on boat
all$escape[all$boat != "28"] <- "1"
all$escape[all$boat == "28"] <- "0"
all$boat[all$boat == "C"] <- "25"
#see if taking boat is highly related survived
b1 <- ggplot(all[!is.na(all$survived),], aes(x = escape, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'escape from ship') +
geom_label(stat='count', aes(label=..count..))
#subset of those who took on boat
survived_boat <- subset(all, all$boat != "28")
#see if there anyone who took on boat and didn't survive
b2 <- ggplot(survived_boat[!is.na(survived_boat$survived),], aes(x = boat, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'boat_survive') + theme_grey()
#replace those data to "0"(body info is NA) and "1"(body info isn't NA)
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- as.factor(all$body)
#set a subset of those which get the body's value
have_body <- subset(all, all$body != "0")
#find out if those data with body info are highly related to death
bo <- ggplot(have_body[!is.na(have_body$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'body_info') + theme_grey()
#so we want to find out the distribution of survived and body
bo_2 <-ggplot(all[!is.na(all$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'body with death') +
geom_label(stat='count', aes(label=..count..))
train <- read.csv("titanicTrain.csv")
train <- train[c(1:1000),]
# Train data 銝??A
str(train)
sapply(train, function(x) {sum(is.na(x))})
# Pclass
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'pClass') +
theme(legend.position="none") + theme_grey() +
geom_label(stat='count', aes(label=..count..))
# Sex
ggplot(train[!is.na(train$survived),], aes(x = sex, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'Train data') +
geom_label(stat='count', aes(label=..count..))
## embarked ##
train$embarked <- train$embarked %>% as.factor
summary(train$embarked[train$survived==0])
summary(train$embarked[train$survived==1])
embark <- cbind(summary(train$embarked[train$survived==0]),summary(train$embarked[train$survived==1]))
embark <- embark[-1,] %>% t
rownames(embark) <- c("0","1")
barplot(embark,col=c("gray","black"),main="embarked variable",beside=TRUE,ylab="counts")
legend("topright", inset=.02,title="Survive",
c("0","1"), fill=c("gray","black"), horiz=TRUE, cex=0.8)
family <- train$parch + train$sibsp + 1
train <- cbind(train,family)
ps1 <- train$family[train$survived==1] %>% as.factor %>% summary %>% c(.,0)
family <- rbind(ps0,ps1)
rm(ps0)
rm(ps1)
ps0 <- train$family[train$survived==0] %>% as.factor %>% summary
barplot(family,col=c("gray","black"),main="family",beside=TRUE,ylab="counts",xlab="Number of people")
legend("topright", inset=.02,title="Survive",
c("0","1"), fill=c("gray","black"), horiz=TRUE, cex=0.8)
#load data
train <- read.csv("titanicTrain.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- train[c(1:1000),]
#bind the data
all <- rbind(train, test)
#as factor
all$sex <- as.factor(all$sex)
all$survived <- as.factor(all$survived)
#first we rename all boats with number 1 to 28
#tranfer original boat numbers to 1:27, 28 refer to NA
all$boat[all$boat == "5 7"] <- "17"
all$boat[all$boat == "5 9"] <- "18"
all$boat[all$boat == "8 10"] <- "19"
all$boat[all$boat == "13 15"] <- "20"
all$boat[all$boat == "13 15 B"] <- "21"
all$boat[all$boat == "15 16"] <- "22"
all$boat[all$boat == "A"] <- "23"
all$boat[all$boat == "B"] <- "24"
all$boat[all$boat == "C"] <- "25"
all$boat[all$boat == "D"] <- "26"
all$boat[all$boat == "C D"] <- "27"
all$boat[is.na(all$boat)] <- "28"
#escape = 1 refer to the refugee who successfully took on boat
all$escape[all$boat != "28"] <- "1"
all$escape[all$boat == "28"] <- "0"
#see if taking boat is highly related survived
b1 <- ggplot(all[!is.na(all$survived),], aes(x = escape, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'escape from ship') +
geom_label(stat='count', aes(label=..count..))
b1
#see if taking boat is highly related survived
b1 <- ggplot(all[!is.na(all$survived),], aes(x = escape, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'escape from ship') +
geom_label(stat='count', aes(label=..count..))
b1
#subset of those who took on boat
survived_boat <- subset(all, all$boat != "28")
#see if there anyone who took on boat and didn't survive
b2 <- ggplot(survived_boat[!is.na(survived_boat$survived),], aes(x = boat, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'boat_survive') + theme_grey()
b2
#replace those data to "0"(body info is NA) and "1"(body info isn't NA)
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- as.factor(all$body)
#set a subset of those which get the body's value
have_body <- subset(all, all$body != "0")
#find out if those data with body info are highly related to death
bo <- ggplot(have_body[!is.na(have_body$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'body_info') + theme_grey()
#so we want to find out the distribution of survived and body
bo_2 <-ggplot(all[!is.na(all$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'body with death') +
geom_label(stat='count', aes(label=..count..))
bo
#find out if those data with body info are highly related to death
bo <- ggplot(have_body[!is.na(have_body$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'body_info') + theme_grey()
bo
#so we want to find out the distribution of survived and body
bo_2 <-ggplot(all[!is.na(all$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'body with death') +
geom_label(stat='count', aes(label=..count..))
bo_2
#escape = 1 refer to the refugee who successfully took on boat
all$escape[all$boat != "28"] <- "1"
all$escape[all$boat == "28"] <- "0"
#see if taking boat is highly related survived
b1 <- ggplot(all[!is.na(all$survived),], aes(x = escape, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'escape from ship') +
geom_label(stat='count', aes(label=..count..))
b1
#subset of those who took on boat
survived_boat <- subset(all, all$boat != "28")
#see if there anyone who took on boat and didn't survive
b2 <- ggplot(survived_boat[!is.na(survived_boat$survived),], aes(x = boat, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'boat_survive') + theme_grey()
b2
#replace those data to "0"(body info is NA) and "1"(body info isn't NA)
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- as.factor(all$body)
#set a subset of those which get the body's value
have_body <- subset(all, all$body != "0")
#find out if those data with body info are highly related to death
bo <- ggplot(have_body[!is.na(have_body$survived),], aes(x = body, fill = survived)) +
geom_bar(stat='count', position='dodge') +
labs(x = 'body_info') + theme_grey()
bo
# Pclass
ggplot(train[!is.na(train$Survived),], aes(x = Pclass, fill = Survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train$ data') +
theme(legend.position="none") + theme_grey()
train <- read.csv("titanicTrain.csv")
train <- train[c(1:1000),]
# Train data 上面的NA
str(train)
sapply(train, function(x) {sum(is.na(x))})
# Pclass
ggplot(train[!is.na(train$Survived),], aes(x = Pclass, fill = Survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train$ data') +
theme(legend.position="none") + theme_grey()
# Pclass
ggplot(train[!is.na(train$Survived),], aes(x = Pclass, fill = Survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train$ data') +
theme(legend.position="none") + theme_grey()
