clean_words <- c("分享","記者","攝影","提及","表示","報導","我們","他們","的","也","都","就","與","但","是","在","和","及","為","或","且","有","含")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_word_doc(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removePunctuation)
# 匯入自定義字典
mixseg = worker()
segment <- c("柯文哲","姚文智","丁守中","台北市長","選舉","候選人","台灣","選票","柯市長","民進黨","國民黨","台北市民","市民")
new_user_word(mixseg,segment)
# 有詞頻之後就可以去畫文字雲
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
# 清除單字
for(i in c(1:length(freqFrame$Var1))){
if((freqFrame$Var1[i] %>% as.character %>% nchar) == 1){
freqFrame[i,] <- NA
}
}
freqFrame <- na.omit(freqFrame)
# 畫出文字雲
# 儲存文字雲圖片
png("Yao_Feb.png", width = 300, height = 300 )
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=50,
random.order=TRUE,random.color=TRUE,
rot.per=.1, colors=rainbow(length(row.names(freqFrame))),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
dev.off()
# ---- Mar
docs <- Corpus(VectorSource(Yao3$V3))
toSpace <- content_transformer(function(x,pattern){
return(gsub(pattern," ",x))
})
# 刪去單詞贅字、英文字母、標點符號、數字與空格
docs <- tm_map(docs,toSpace,"\n")
docs <- tm_map(docs,toSpace, "[A-Za-z0-9]")
clean_doc <- function(docs){
clean_words <- c("[A-Za-z0-9]","、","《","『","』","【","】","／","，","。","！","「","（","」","）","\n","；",">","<","＜","＞")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_doc(docs)
clean_word_doc <- function(docs){
clean_words <- c("分享","記者","攝影","提及","表示","報導","我們","他們","的","也","都","就","與","但","是","在","和","及","為","或","且","有","含")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_word_doc(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removePunctuation)
# 匯入自定義字典
mixseg = worker()
segment <- c("柯文哲","姚文智","丁守中","台北市長","選舉","候選人","台灣","選票","柯市長","民進黨","國民黨","台北市民","市民")
new_user_word(mixseg,segment)
# 有詞頻之後就可以去畫文字雲
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
# 清除單字
for(i in c(1:length(freqFrame$Var1))){
if((freqFrame$Var1[i] %>% as.character %>% nchar) == 1){
freqFrame[i,] <- NA
}
}
freqFrame <- na.omit(freqFrame)
# 畫出文字雲
# 儲存文字雲圖片
png("Yao_Mar.png", width = 300, height = 300 )
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=50,
random.order=TRUE,random.color=TRUE,
rot.per=.1, colors=rainbow(length(row.names(freqFrame))),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
dev.off()
# ---- Apr
docs <- Corpus(VectorSource(Yao4$V3))
toSpace <- content_transformer(function(x,pattern){
return(gsub(pattern," ",x))
})
# 刪去單詞贅字、英文字母、標點符號、數字與空格
docs <- tm_map(docs,toSpace,"\n")
docs <- tm_map(docs,toSpace, "[A-Za-z0-9]")
clean_doc <- function(docs){
clean_words <- c("[A-Za-z0-9]","、","《","『","』","【","】","／","，","。","！","「","（","」","）","\n","；",">","<","＜","＞")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_doc(docs)
clean_word_doc <- function(docs){
clean_words <- c("分享","記者","攝影","提及","表示","報導","我們","他們","的","也","都","就","與","但","是","在","和","及","為","或","且","有","含")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_word_doc(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removePunctuation)
# 匯入自定義字典
mixseg = worker()
segment <- c("柯文哲","姚文智","丁守中","台北市長","選舉","候選人","台灣","選票","柯市長","民進黨","國民黨","台北市民","市民")
new_user_word(mixseg,segment)
# 有詞頻之後就可以去畫文字雲
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
# 清除單字
for(i in c(1:length(freqFrame$Var1))){
if((freqFrame$Var1[i] %>% as.character %>% nchar) == 1){
freqFrame[i,] <- NA
}
}
freqFrame <- na.omit(freqFrame)
# 畫出文字雲
# 儲存文字雲圖片
png("Yao_Apr.png", width = 300, height = 300 )
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=50,
random.order=TRUE,random.color=TRUE,
rot.per=.1, colors=rainbow(length(row.names(freqFrame))),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
dev.off()
# ---- May
docs <- Corpus(VectorSource(Yao5$V3))
toSpace <- content_transformer(function(x,pattern){
return(gsub(pattern," ",x))
})
# 刪去單詞贅字、英文字母、標點符號、數字與空格
docs <- tm_map(docs,toSpace,"\n")
docs <- tm_map(docs,toSpace, "[A-Za-z0-9]")
clean_doc <- function(docs){
clean_words <- c("[A-Za-z0-9]","、","《","『","』","【","】","／","，","。","！","「","（","」","）","\n","；",">","<","＜","＞")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_doc(docs)
clean_word_doc <- function(docs){
clean_words <- c("分享","記者","攝影","提及","表示","報導","我們","他們","的","也","都","就","與","但","是","在","和","及","為","或","且","有","含")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_word_doc(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removePunctuation)
# 匯入自定義字典
mixseg = worker()
segment <- c("柯文哲","姚文智","丁守中","台北市長","選舉","候選人","台灣","選票","柯市長","民進黨","國民黨","台北市民","市民")
new_user_word(mixseg,segment)
# 有詞頻之後就可以去畫文字雲
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
# 清除單字
for(i in c(1:length(freqFrame$Var1))){
if((freqFrame$Var1[i] %>% as.character %>% nchar) == 1){
freqFrame[i,] <- NA
}
}
freqFrame <- na.omit(freqFrame)
# 畫出文字雲
# 儲存文字雲圖片
png("Yao_May.png", width = 300, height =300 )
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=150,
random.order=TRUE,random.color=TRUE,
rot.per=.1, colors=rainbow(length(row.names(freqFrame))),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
dev.off()
# ---- 2018
docs <- Corpus(VectorSource(Yao_all$V3))
toSpace <- content_transformer(function(x,pattern){
return(gsub(pattern," ",x))
})
# 刪去單詞贅字、英文字母、標點符號、數字與空格
docs <- tm_map(docs,toSpace,"\n")
docs <- tm_map(docs,toSpace, "[A-Za-z0-9]")
clean_doc <- function(docs){
clean_words <- c("[A-Za-z0-9]","、","《","『","』","【","】","／","，","。","！","「","（","」","）","\n","；",">","<","＜","＞")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_doc(docs)
clean_word_doc <- function(docs){
clean_words <- c("分享","記者","攝影","提及","表示","報導","我們","他們","的","也","都","就","與","但","是","在","和","及","為","或","且","有","含")
for(i in 1:length(clean_words)){
docs <- tm_map(docs,toSpace, clean_words[i])
}
return(docs)
}
docs <- clean_word_doc(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, removePunctuation)
# 匯入自定義字典
mixseg = worker()
segment <- c("柯文哲","姚文智","丁守中","台北市長","選舉","候選人","台灣","選票","柯市長","民進黨","國民黨","台北市民","市民")
new_user_word(mixseg,segment)
# 有詞頻之後就可以去畫文字雲
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
# 清除單字
for(i in c(1:length(freqFrame$Var1))){
if((freqFrame$Var1[i] %>% as.character %>% nchar) == 1){
freqFrame[i,] <- NA
}
}
freqFrame <- na.omit(freqFrame)
# 畫出文字雲
# 儲存文字雲圖片
png("Yao_2018.png", width = 300, height =300 )
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=300,
random.order=TRUE,random.color=TRUE,
rot.per=.1, colors=rainbow(length(row.names(freqFrame))),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
dev.off()
png("Yao_2018.png", width = 400, height =400 )
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=300,
random.order=TRUE,random.color=TRUE,
rot.per=.1, colors=rainbow(length(row.names(freqFrame))),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
dev.off()
View(Yao_all)
length(Yao1)
nrow(Yao1)
?data.frame()
# 報導量
Yao_textNum <- rbind(nrow(Yao1),nrow(Yao2),nrow(Yao3),nrow(Yao4),nrow(Yao5) )
Yao_textNum
names(Yao_textNum) <- "姚文智報導量"
Yao_textNum
Yao_textNum %>% as.data.frame()
names(Yao_textNum) <- "姚文智報導量"
Yao_textNum
colnames(Yao_textNum) <- "姚文智報導量"
Yao_textNum
# ===== 文字雲程式 : 聯合報文字雲
# ===== 處理姚文智1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# 匯入資料組
setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/UDN/爬完的結果!!")
Yao_data <- read.csv("Yao_JanFebNews.csv")
Yao_data2 <- read.csv("Yao_MarAprNews.csv")
Yao_data3 <- read.csv("Yao_MayNews.csv")
# bind all
Yao_all <- rbind(Yao_data3[, 1:4], Yao_data2[,1:4], Yao_data[, 1:4])
# 清除NA
Yao_all <- Yao_all %>% na.omit()
#切開時間
Yao_all <- Yao_all %>% separate(V1, c("year","month","day"),"-")
Yao_all <- Yao_all %>% separate(day, c("date","time"), " ")
Yao_all <- Yao_all[with(Yao_all, order(month, date)), ]
Yao_all <- Yao_all[!duplicated(Yao_all$V3), ]
row.names(Yao_all) = c(1:716)
# 依月份建立子資料組
Yao1<- subset(Yao_all , Yao_all$month == "01", select = V3)
Yao2<- subset(Yao_all , Yao_all$month == "02", select = V3)
Yao3<- subset(Yao_all , Yao_all$month == "03", select = V3)
Yao4<- subset(Yao_all , Yao_all$month == "04", select = V3)
Yao5<- subset(Yao_all , Yao_all$month == "05", select = V3)
# 報導量
Yao_textNum <- rbind(nrow(Yao1),nrow(Yao2),nrow(Yao3),nrow(Yao4),nrow(Yao5) )
Yao_textNum %>% as.data.frame()
colnames(Yao_textNum) <- "姚文智報導量"
Yao_textNum
?rownames()
rownames(Yao_textNum) <- c("Jan","Feb","Mar","Apr","May")
Yao_textNum
# ===== 文字雲程式 : 聯合報文字雲
# ===== 處理 丁守中1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# ---- 資料清理 --------------------------------------------------------------
# 匯入資料組
setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/UDN/爬完的結果!!")
Di_data <- read.csv("Di_JanFebNews.csv", encoding = "big5")
Di_data2 <- read.csv("Di_MarAprNews.csv", encoding = "big5")
Di_data3 <- read.csv("Di_MayNews.csv", encoding = "big5")
# bind all
Di_all <- rbind(Di_data[,2:4], Di_data2[,2:4], Di_data3[,2:4])
# 清除NA
Di_all <- Di_all %>% na.omit()
#切開時間
Di_all <- Di_all %>% separate(V1, c("year","month","day"),"-")
Di_all <- Di_all %>% separate(day, c("date","time"), " ")
Di_all <- Di_all[with(Di_all, order(month, date)), ]
Di_all <- Di_all[!duplicated(Di_all$V3), ]
row.names(Di_all) = c(1:700) # 由資料數重新編排號碼
# 依月份建立子資料組
Di1<- subset(Di_all , Di_all$month == "01", select = V3)
Di2<- subset(Di_all , Di_all$month == "02", select = V3)
Di3<- subset(Di_all , Di_all$month == "03", select = V3)
Di4<- subset(Di_all , Di_all$month == "04", select = V3)
Di5<- subset(Di_all , Di_all$month == "05", select = V3)
# 報導量
Di_textNum <- rbind(nrow(Di1),nrow(Di2),nrow(Di3),nrow(Di4),nrow(Di5) )
Di_textNum %>% as.data.frame()
colnames(Di_textNum) <- "丁守中報導量"
rownames(Di_textNum) <- c("Jan","Feb","Mar","Apr","May")
Di_textNum
Di
# ===== 文字雲程式 : 聯合報文字雲
# ===== 處理 柯文哲1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# ---- 資料清理 --------------------------------------------------------------
# 匯入資料組
setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/UDN/爬完的結果!!")
Ko_data <- read.csv("ko_Output.csv", encoding = "big5")
Ko_data2 <- read.csv("ko_Output2.csv", encoding = "big5")
# bind all
ko_all <- rbind(Ko_data[,4:5], Ko_data2[,3:4])
# 清除NA
ko_all <- ko_all %>% na.omit()
#切開時間
ko_all <- ko_all %>% separate(V2, c("year","month","day"),"-")
ko_all <- ko_all %>% separate(day, c("date","time"), " ")
ko_all <- ko_all[with(ko_all, order(month, date)), ]
row.names(ko_all) = c(1:3114) # 由資料數重新編排號碼
ko_all <- ko_all[!duplicated(ko_all$bindtext), ]
ko1<- subset(ko_all, ko_all$month == "01", select = bindtext)
ko2<- subset(ko_all, ko_all$month == "02", select = bindtext)
ko3<- subset(ko_all, ko_all$month == "03", select = bindtext)
ko4<- subset(ko_all, ko_all$month == "04", select = bindtext)
ko5<- subset(ko_all, ko_all$month == "05", select = bindtext)
# 報導量
Ko_textNum <- rbind(nrow(Ko1),nrow(Ko2),nrow(Ko3),nrow(Ko4),nrow(Ko5) )
Ko_textNum %>% as.data.frame()
colnames(Ko_textNum) <- "柯文哲報導量"
rownames(Ko_textNum) <- c("Jan","Feb","Mar","Apr","May")
Ko_textNum
# 報導量
Ko_textNum <- rbind(nrow(ko1),nrow(ko2),nrow(ko3),nrow(ko4),nrow(ko5) )
Ko_textNum %>% as.data.frame()
colnames(Ko_textNum) <- "柯文哲報導量"
rownames(Ko_textNum) <- c("Jan","Feb","Mar","Apr","May")
Ko_textNum
# 輸出
write.table(Ko_textNum, file = "Ko_textNum.CSV", sep = ",")
# ===== 文字雲程式 : 聯合報文字雲
# ===== 處理姚文智1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# 匯入資料組
setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/UDN/爬完的結果!!")
Yao_data <- read.csv("Yao_JanFebNews.csv")
Yao_data2 <- read.csv("Yao_MarAprNews.csv")
Yao_data3 <- read.csv("Yao_MayNews.csv")
# bind all
Yao_all <- rbind(Yao_data3[, 1:4], Yao_data2[,1:4], Yao_data[, 1:4])
# 清除NA
Yao_all <- Yao_all %>% na.omit()
#切開時間
Yao_all <- Yao_all %>% separate(V1, c("year","month","day"),"-")
Yao_all <- Yao_all %>% separate(day, c("date","time"), " ")
Yao_all <- Yao_all[with(Yao_all, order(month, date)), ]
Yao_all <- Yao_all[!duplicated(Yao_all$V3), ]
row.names(Yao_all) = c(1:716)
# 依月份建立子資料組
Yao1<- subset(Yao_all , Yao_all$month == "01", select = V3)
Yao2<- subset(Yao_all , Yao_all$month == "02", select = V3)
Yao3<- subset(Yao_all , Yao_all$month == "03", select = V3)
Yao4<- subset(Yao_all , Yao_all$month == "04", select = V3)
Yao5<- subset(Yao_all , Yao_all$month == "05", select = V3)
# 報導量
Yao_textNum <- rbind(nrow(Yao1),nrow(Yao2),nrow(Yao3),nrow(Yao4),nrow(Yao5) )
Yao_textNum %>% as.data.frame()
colnames(Yao_textNum) <- "姚文智報導量"
rownames(Yao_textNum) <- c("Jan","Feb","Mar","Apr","May")
Yao_textNum
# 輸出
write.table(Yao_textNum, file = "Yao_textNum.CSV", sep = ",")
# ===== 文字雲程式 : 聯合報文字雲
# ===== 處理 丁守中1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# ---- 資料清理 --------------------------------------------------------------
# 匯入資料組
setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/UDN/爬完的結果!!")
Di_data <- read.csv("Di_JanFebNews.csv", encoding = "big5")
Di_data2 <- read.csv("Di_MarAprNews.csv", encoding = "big5")
Di_data3 <- read.csv("Di_MayNews.csv", encoding = "big5")
# bind all
Di_all <- rbind(Di_data[,2:4], Di_data2[,2:4], Di_data3[,2:4])
# 清除NA
Di_all <- Di_all %>% na.omit()
#切開時間
Di_all <- Di_all %>% separate(V1, c("year","month","day"),"-")
Di_all <- Di_all %>% separate(day, c("date","time"), " ")
Di_all <- Di_all[with(Di_all, order(month, date)), ]
Di_all <- Di_all[!duplicated(Di_all$V3), ]
row.names(Di_all) = c(1:700) # 由資料數重新編排號碼
# 依月份建立子資料組
Di1<- subset(Di_all , Di_all$month == "01", select = V3)
Di2<- subset(Di_all , Di_all$month == "02", select = V3)
Di3<- subset(Di_all , Di_all$month == "03", select = V3)
Di4<- subset(Di_all , Di_all$month == "04", select = V3)
Di5<- subset(Di_all , Di_all$month == "05", select = V3)
# ==== 丁守中
# 報導量
Di_textNum <- rbind(nrow(Di1),nrow(Di2),nrow(Di3),nrow(Di4),nrow(Di5) )
Di_textNum %>% as.data.frame()
colnames(Di_textNum) <- "丁守中報導量"
rownames(Di_textNum) <- c("Jan","Feb","Mar","Apr","May")
Di_textNum
# 輸出
write.table(Di_textNum, file = "Di_textNum.CSV", sep = ",")
